import Head from "next/head";
import { useCallback, useRef, useState, memo, useMemo, useEffect } from "react";

// @ts-ignore
const Button = memo(
  ({
    onClick,
    label,
    counterObject,
  }: {
    onClick: () => void;
    label: React.ReactNode;
    counterObject: {
      counter: number;
    };
  }) => {
    const renderCount = useRef(0);
    renderCount.current++;

    return (
      <button onClick={onClick}>
        {label} {counterObject.counter} - rendering: {renderCount.current}
      </button>
    );
  },
);

Button.displayName = "Button";

export default function Home() {
  const [counter, setCounter] = useState(0);
  const [counter2, setCounter2] = useState(0);
  const counterObject = useMemo(() => {
    return { counter };
  }, [counter]);

  useEffect(() => {
    console.log("effect");
  }, [counter]);

  const onResize = useCallback(() => {
    console.log("resized");
  }, []);

  useEffect(() => {
    window.addEventListener("resize", onResize);
    return () => {
      window.removeEventListener("resize", onResize);
    };
  }, []);

  const handleClick = useCallback(() => {
    setCounter((prev) => prev + 1);
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <Button
          onClick={handleClick}
          label={`Clicked me`}
          counterObject={counterObject}
        />
        <span>'clicked {counter} times'</span>
        <button onClick={() => setCounter2(counter2 + 1)}>
          Other button {counter2}
        </button>
      </div>
    </>
  );
}
